#include "archiveutils.h"

/**
	Helper function to extract a file using filesystem::path and std::string
*/
bool Archive::extract_s(fs::path from, std::string filename, fs::path to)
{
	std::string from_s = from.string();
	std::string to_s = to.string();
	const char* from_c = from_s.c_str();
	const char* to_c = to_s.c_str();

	return extract(from_c, filename.c_str(), to_c);
}

int Archive::copy_data(struct archive* ar, struct archive* aw)
{
	int r;
	const void* buff;
	size_t size;
	la_int64_t offset;

	for (;;) {
		r = archive_read_data_block(ar, &buff, &size, &offset);
		if (r == ARCHIVE_EOF)
			return (ARCHIVE_OK);
		if (r < ARCHIVE_OK)
			return (r);
		r = archive_write_data_block(aw, buff, size, offset);
		if (r < ARCHIVE_OK) {
			fprintf(stderr, "%s\n", archive_error_string(aw));
			return (r);
		}
	}
}

/**
	Extract from archive "from", the file "filename" into path "to" (filename has to be included he