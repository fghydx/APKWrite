#include "netutils.h"

/**
	Writes data received from Curl to a stream
*/
size_t Curl::write_data_file(char* ptr, size_t size, size_t nmemb, void* stream)
{
	std::iostream* fstr = static_cast<std::iostream*>(stream);
	size_t bytes = size * nmemb;
	fstr->write(ptr, bytes);
	return bytes;
}

static double dled = 0.0;
static double dltot = 0.0;
static bool progressrun = false;

void Curl::updateProgress()
{
	while (progressrun)
	{
		if (dltot > 0)
		{
			double mBytesTotal = dltot / 1024 / 1024;
			double mBytesNow = dled / 1024 / 1024;
			std::cout << "Download progress: " << (std::min)(100, (std::max)(0, int(dled * 100 / dltot))) << " %, " << std::fixed << std::setprecision(2) << mBytesNow << " MB / " << mBytesTotal << " MB                    \r";
		}
		std::this_thread::sleep_for(std::chrono::seconds(1));
	}
}

int Curl::progress_callback(void* clientp, double dltotal, double dlnow, dou