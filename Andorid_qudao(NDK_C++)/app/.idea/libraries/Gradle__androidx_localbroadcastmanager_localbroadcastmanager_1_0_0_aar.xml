#ifndef PATCHUTILS_H
#define PATCHUTILS_H

#include "filesystem.hpp"
#include <fstream>
#include <optional>
#include <sstream>
#include <regex>
#include <iomanip>
#include <cstdarg>
#include <array>

#include "debugutils.h"
#include "config.h"

namespace Patcher
{
	class PatchException : std::exception
	{
	public:
		PatchException(const char* message, ...) 
		{
			va_list args;
			va_start(args, message);
			char* buf = new char[1024];
			vsprintf(buf, message, args);
			va_end(args);
			msg = buf;
		}
		~PatchException()
		{
			delete[] msg;
		}
		const char* what() const noexcept { return msg; }
	private:
		const char* msg;
	};

	struct LLQQQQLLQQ // couldn't find a better name LOL
	{
		unsigned long l1;
		unsigned long l2;
		unsigned 